# =================================================================
# ==           ENVIRONMENT VARIABLES FOR "THE SCENT"             ==
# =================================================================
#
# This file is for local development secrets and configuration.
# It is ignored by Git. DO NOT commit this file to version control.
#

#---------------------------------
# Application Environment
#---------------------------------
# Set the environment for Next.js. Should be 'development' for local work.
NODE_ENV=development

# The public URL of your site, used by Next.js and various libraries.
NEXT_PUBLIC_SITE_URL="http://localhost:3000"


#---------------------------------
# Database (PostgreSQL)
#---------------------------------
# This connection string is used by Prisma for runtime queries with connection pooling.
# It is configured based on your docker-compose.yml file.
DATABASE_URL="postgresql://scent_user:StrongPass1234@localhost:5432/scent_db?schema=public"

# This connection string is used by Prisma for migrations and other direct DB access.
# For this Docker setup, it's the same as the pooled URL.
DATABASE_DIRECT_URL="postgresql://scent_user:StrongPass1234@localhost:5432/scent_db?schema=public"


#---------------------------------
# Authentication (NextAuth.js)
#---------------------------------
# A secret key for signing JWTs and other security tokens.
# REQUIRED for production. You can generate a good secret with:
# `openssl rand -hex 32` in your terminal.
#NEXTAUTH_SECRET="REPLACE_WITH_A_SECURE_RANDOM_STRING_32_CHARS_LONG"
NEXTAUTH_SECRET="3c090c32f46eb14d0aa64453bf0275d89f8aadae439759b5227edcd1ed9b09bf"

# The canonical URL for NextAuth callbacks.
NEXTAUTH_URL="http://localhost:3000"

# --- Google Provider ---
# Get these from the Google Cloud Console: https://console.cloud.google.com/apis/credentials
GOOGLE_CLIENT_ID="REPLACE_WITH_YOUR_GOOGLE_CLIENT_ID"
GOOGLE_CLIENT_SECRET="REPLACE_WITH_YOUR_GOOGLE_CLIENT_SECRET"

# --- Email Provider ---
# Configuration for passwordless sign-in via email (e.g., using SendGrid, Resend, etc.)
# Example for a standard SMTP server: "smtp://user:pass@smtp.example.com:587"
EMAIL_SERVER="REPLACE_WITH_YOUR_SMTP_SERVER_URL"
EMAIL_FROM="noreply@thescent.com"


#---------------------------------
# External Services
#---------------------------------

# --- Stripe (Payments) ---
# Get these from your Stripe Dashboard: https://dashboard.stripe.com/apikeys
STRIPE_PUBLIC_KEY="pk_test_REPLACE_WITH_YOUR_STRIPE_PUBLIC_KEY"
STRIPE_SECRET_KEY="sk_test_REPLACE_WITH_YOUR_STRIPE_SECRET_KEY"
STRIPE_WEBHOOK_SECRET="whsec_REPLACE_WITH_YOUR_STRIPE_WEBHOOK_SECRET"

# --- SendGrid (Transactional Emails) ---
# Get this from your SendGrid account: https://app.sendgrid.com/settings/api_keys
SENDGRID_API_KEY="SG.REPLACE_WITH_YOUR_SENDGRID_API_KEY"

# --- Algolia (Search) ---
# Get these from your Algolia Dashboard: https://www.algolia.com/account/api-keys/
ALGOLIA_APP_ID="REPLACE_WITH_YOUR_ALGOLIA_APP_ID"
ALGOLIA_API_KEY="REPLACE_WITH_YOUR_ALGOLIA_API_KEY" # Use the Admin API Key for backend operations

# --- AWS S3 (File Storage) ---
# Get these from your AWS IAM console.
S3_REGION="us-east-1" # e.g., us-east-1
S3_ACCESS_KEY_ID="REPLACE_WITH_YOUR_S3_ACCESS_KEY"
S3_SECRET_ACCESS_KEY="REPLACE_WITH_YOUR_S3_SECRET_KEY"
S3_BUCKET_NAME="the-scent-media" # The name of your S3 bucket

#---------------------------------
# CMS (Sanity.io)
#---------------------------------
# Get these from your Sanity project settings: https://www.sanity.io/manage
NEXT_PUBLIC_SANITY_PROJECT_ID="REPLACE_WITH_YOUR_SANITY_PROJECT_ID"
NEXT_PUBLIC_SANITY_DATASET="production"
NEXT_PUBLIC_SANITY_API_VERSION="2024-06-28"
# Optional: Create a read-only token for production builds if your dataset is private
# SANITY_API_READ_TOKEN="REPLACE_WITH_YOUR_SANITY_TOKEN"

